---
title: "Spread of Wheat Stripe Rust in an Experimental Framework"
subtitle: "Deriving a model for source imputation"
author:   
  - name: Trent VanHawkins
    affiliations:
      - ref: osu
    degrees: MS
    corresponding: true
  - name: Christopher Mundt
    affiliations:
      - ref: osu
    degrees: PhD
  - name: David Gent
    affiliations:
      - ref: usda
      - ref: osu
    degrees: PhD
  - name: Shirshendu Chatterjee
    affiliations:
      - ref: nyu
  - name: Sharmodeep Bhattacharyya
    affiliations:
      - ref: osu
    degrees: PhD
affiliations:
  - id: osu
    name: Oregon State University
  - id: usda
    name: U.S. Department of Agriculture
  - id: nyu
    name: City University of New York
format: 
  pdf:
    geometry: "margin=0.75in"
    mathspec: true
    cap-location: bottom
    tbl-cap-location: bottom
    header-includes: 
      - \usepackage{fancyhdr, amsthm, amssymb,amsfonts,amsthm, mystyle, amsmath, bbm}
      - \usepackage{float, tabularx}
      - \floatplacement{table}{H}
      - \pagestyle{fancy}
      - \fancyhead[R]{Backward Model}
      - \fancyhead[L]{Trent VanHawkins}
      - \fancyfoot[C]{\thepage} # Center page number at bottom of each page
page-layout: full
execute: 
  eval: true
references: references.bib
bibliography: references.bib
---

# Introduction

Previous reports in this series have derived and documented a model for the aerial dispersal of Stripe Rust (*Puccinia striiformis*) among Wheat plants. In these reports, we explored various model formulations and optimization strategies of a forward-model of disease intensity, which we breifly review here in addition to experimental design.

Now that we have optimized the parameter vector $\Theta_{t,s,b}$ for each transition $t$ in each treatment-replicate combination (indexed by $s$ and $b$, respectively), our goal is to derive and implement a backward model which will allow us to impute source locations---where the epidemic began. Here, we propose a latent-variable approach for the structure and optimization of such a model via the Expectation-Maximization (EM) algorithm.

# Methods

We have detailed experimental design rigorously in previous reports (see "00_EDA.qmd"), but let us recall that we denote disease severity $Y$ at an individual sample location $i \in \{1, \ldots, n\}$ at time $t \in \bigpar{1, \ldots, 5}$ by $Y_{i,t}$. Additionally, we can denote the experimental block $b \in (1, 2, 3, 4)$, with replicates distinguished by the number of inoculation sources (treatment-levels) $s \in \bigpar{1, 2, 4}$. Recall that disease severity at sample location $i$ was measured via visual estimation as the proportion of infected plant tissue within a $(0.76m \times 0.76m)$ square, and was expressed as a percentage. Using this measurement scheme, the outcome naturally presents as a continuous measure with bounds at $(0,1)$, which is naturally captured by a $\text{Beta}(a, b)$ distribution where $a$ and $b$ are shape parameters. That is,

$$
Y \isim \text{Beta}(a,b).
$$

In this report, as in previous reports, we will drop subscripts for block and replicate ($b$ and $s$) for economy of expression. We reparameterize the model such that its expectation is its mean ($\mu$), and introduce a mixture distribution to accommodate for a potential point-mass at 0 for sample units that have not yet been infected commonly called a "zero-inflated" model [@ospina_inflated_2010]. Letting $f(y; \mu, \phi)$ denote the PDF of the reparameterized Beta distribution, the density function for a single observation of $y$ is then given by

$$
\mathrm{ZIB}(y ; \alpha, \mu, \phi) = \begin{cases}\alpha & y = 0 \\ (1 - \alpha)f(y; \mu, \phi) & y \in (0,1)\end{cases}
$$

Notice that $\alpha$ is the probability mass at 0 and represents $P(y = 0)$. Under this parameterization, we have that

$$
\E{y} = (1-\alpha)\mu \quad 0 < \mu < 1; \quad  \text{and} \quad \Var{y} = (1 - \alpha)\frac{\mu(1-\mu)}{\phi + 1} + \alpha(1-\alpha)\mu^2 \quad \phi > 0
$$

Here we estimate a unique mean response $\mu_{i,t}$ for each sample location and time point, while assuming shared inflation and precision parameters $\alpha_t$ and $\phi_t$ across locations within a given time. This is a common modeling assumption in generalized regression frameworks to reduce complexity and avoid overparameterization [@ferrari2004].

## The Forward Model

In the forward model, we estimated $\mu_{i,t}$ under a non-linear framework. Let $\mathbf{X} = \{\mathbf{y}_{t-1}, \mathbf{w}_{t-1}, \mathbf{d}\}$; where $\mathbf{y}_{t-1}$ is an $n \times n$ matrix of diesease severity at time $t-1$, $\mathbf{w}_{t-1}$ is an $n \times n$ matrix of orthogonally projected wind movement between sample location $j \neq i$ and sample location $i$, and $\mathbf{d}$ is an $n \times n$ matrix capturing distance between sample locations. We then estimate

$$
\E{y_{i,t}| \mathbf{X}, \Theta_t} = (1-\alpha_t)\mu_{i,t} = (1-\alpha_t)\logit^{-1}(\eta_{i,t})
$$

and we specified the mean-structure of the model as

$$
\eta_{i,t} = \beta_t + \delta_t \times  y_{i,t-1}(1-y_{i,t-1}) + \gamma_t \times \sum_{j \neq i}\bigpar{y_{j,t-1}w_{ij} (d_{ij} + d_0)^{-\kappa_t}}
$$ {#eq-meanmod}

We then optimized the parameter vector $\Theta_{t}$ separately for each transition from time $t - 1$ to time $t$ and for each treatment-replicate combination. Optimization was performed using the quasi-Newton method with gradient-based Hessian approximation, as implemented in the `optim()` function (`method = "BFGS"`) in `R`. Additional details on covariate formatting and parameter initialization can be found in `00a_ModelingConsiderations.qmd`.

::: {#tbl-covars}
\begin{table}
    \small
    \centering
    \subcaptionbox{Variable definitions for the proposed model.\label{tbl-vars}}{
        \begin{tabularx}{\textwidth}{lX}
            \toprule
            Variable & Description \\
            \midrule
            $y_{i,t-1}$ & Proportion of diseased plant tissue at survey unit $i$ in the previous time point. \\
            $y_{j,t-1}$ & Proportion of diseased plant tissue at survey unit $j$ in the previous time point. \\
            $w_{ij}$    & Wind vector on $i - j$ direction at the prior time point. \\
            $d_{ij}$    & Distance between survey unit $i$ and $j$. \\
            $d_0$       & A constant (optional) distance offset to avoid division errors at 0. \\
            \bottomrule
        \end{tabularx}
    }
    
    \vspace{1em}  

    \subcaptionbox{Model parameters and interpretations from the proposed model.\label{tbl-params}}{
        \begin{tabularx}{\textwidth}{lX}
            \toprule
            Parameter & Interpretation \\
            \midrule
            $\beta$  & Baseline log-odds of disease, after accounting for autoinfection and disease spread. \\
            $\delta$ & Change in log-odds of disease associated with autoinfection for each survey unit. \\
            $\gamma$ & Distance-adjusted change in log-odds of disease associated with disease spread from other survey units, after accounting for autoinfection. \\
            $\kappa$ & Dispersal parameter providing distance adjustment to change in log-odds of disease associated with individual sources; scales latter non-linearly with distance away from target. \\
            \bottomrule
        \end{tabularx}
    }
\end{table}

\small Covariates, parameters, and their interpretations for the proposed model from @eq-meanmod.
:::


## The Backward Model

The ultimate goal of this project is to derive and implement a modeling framework for *source imputation*. In the forward model, we explicitly accounted for the amount of inoculate moved from sample location $j$ to sample location $i$ via an orthogonal projection of wind ($\mathbf{w}$) as a non-linear function of the distance between sample locations through the dispersal component of the model (@eq-dispersal).

$$
\gamma\sum_{j \neq i}\bigpar{y_{j,t-1}w_{ij} (d_{ij} + d_0)^{-\kappa}}
$$ {#eq-dispersal}

We weighted the contribution of each sample location by its severity at the previous time point $y_{j, t-1}$, and summed over the contribution from all other sources such that the dispersal term $\gamma$ can then be interpreted as in @tbl-covars. The model falls short, however, when it comes to the issue of *source imputation*.

Let us introduce a latent process $Z$ which indicates the causal attribution of disease to one of $k \in \bigpar{1, \ldots, K}$ sources with a certain probability:

$$
Z_i \sim \mathrm{Multinomial}\bigpar{1, \boldsymbol{\pi}}
$$ 

Under this framework $P(Z_i = k) = \pi_k$ indicates that an infection event is caused by source $k$ with probability $\pi_k$. We are interested in estimating the conditional posterior $p_k = p(z_i = k \mid \mathbf{X}, \Theta)$---the probability that source location $i$ was infected by source $k$, given our observed data (also called the 'complete' data). One way to accomplish such a goal is to leverage the Expectation-Maximization (EM) algorithm. 

Define the complete data as $\mathcal{X} = \bigbrace{\mathcal{Y}, \boldsymbol{Z}}$, where $\mathcal{Y} = \bigbrace{\mathbf{y}_t, \mathbf{w}_t, \mathbf{d}}$ Our goal here is to find the maximum likelihood estimate of the marginal likelihood of our *observed* data $\mathrm{ZIB}(y_{i,t}; \alpha_t, \mu_{i,t}, \phi_t)$ by iteratively applying two steps: 


**Expectation step (E-step):** Find the expected log-likelihood of our parameter vector with respect to the conditional distribution of $\mathbf{Z \mid Y}$
$$
Q(\Theta; \Theta^{(h)}) = E_{Z}\bigbrak{\log p \bigpar{\mathbf{Y}, \mathbf{Z} \mid \Theta}}
$${#eq-estep}

**Maximization step (M-step):** Update the parameter vector 
$$
\Theta^{(h + 1)} = \arg\max_\theta \ Q(\Theta | \Theta^{(h)})
$${#eq-mstep}

Note that we can simplify the E-step with some manipulation. It can equivalently be written: 

$$
Q(\Theta, \Theta^{(h)}) = \nsum \sum_{k = 1}^K p_k \cdot \log p\bigpar{y_i \mid z_i = k} + \nsum \sum_{k = 1}^K p_k \cdot \log \pi_k
$$

Where $p_k$ is the posterior probability $p(z_i = k \mid y_i, \Theta)$ that component $k$ is responsible for infection of sample unit $i$, $\pi_k$ is the marginal probability $p(Z_i = k)$. Note that $\log p\bigpar{y_i \mid z_i = k}$ is the log-likelihood of our ZIB distribution defined earlier **assuming infection from component** $k$. Using the notation defined earlier, we can write

$$
P(y_i | z_i = k) = \mathrm{ZIB}\bigpar{y_i ; \alpha_t, \mu_{i,t}^{(k)}, \phi_t}
$$

To estimate $\mu_{i,t}^{(k)}$, we propose to assign each plant $i$ to one of $k \in K$ evenly-divided and non-overlapping potential source groups $G_k \subset i \in \bigbrace{1, 2, \ldots, n}$ (@fig-sourcegroup).

```{r}
#| echo: false
#| message: false
#| label: fig-sourcegroup
#| fig-align: center
#| fig-cap: "Schematics for each of the four grouping strategies considered in this study; corresponding to 16, 8 (oriented vertically or horizontally), and 4 plants per source group from left to right."
#| fig-width: 8
#| cache: true

library(tidyverse)
library(here)
library(sf)

clusters <- readRDS(here("DataProcessed/experimental/grids_sp.rds"))


plant_grid <- bind_rows(clusters$`4`$grid,
                         clusters$`8h`$grid,
                         clusters$`8v`$grid,
                         clusters$`16`$grid,
                         clusters$`64`$grid)

points_grid <- bind_rows(clusters$`4`$points,
                         clusters$`8h`$points,
                         clusters$`8v`$points,
                         clusters$`16`$points,
                         clusters$`64`$points)

plant_grid <- plant_grid |> mutate(K = case_when(name == "2 x 2" ~ "K = 16",
name == "2 x 4" ~ "K = 8 (Vertical)",
name == "4 x 2" ~ "K = 8 (Horizontal)",
name == "4 x 4" ~ "K = 4",
name == "8 x 8" ~ "K = 64")) |> 
  mutate(K = factor(K, levels = c("K = 4", 
  "K = 8 (Vertical)",
  "K = 8 (Horizontal)",
  "K = 16", 
  "K = 64")))

plant_grid %>% 
  ggplot()+
  geom_sf(fill = "transparent")+
  geom_sf(data = points_grid)+
  geom_sf_text(aes(label = grid_id), size = 2)+
  facet_wrap(~K, nrow = 1)+
  labs(x = "E", y = "N")+
  theme_classic()

ggsave("prior_grid.png", path = here("Reports/CAS_poster/"), width = 10, height = 4, unit = "in")
```

At each iteration, we will specifically update $\hat\mu_{i,t}^{(k)}$ as

$$
\hat\mu_{i,t}^{(k)} = \logit^{-1}\bigpar{\hat\eta_{i,t}^{(k)}} = \hat\beta_t^{(k)} + \hat\delta_t^{(k)}  y_{i,t-1}(1 - y_{i,t-1}) + \hat\gamma_t^{(k)}  \sum_{j \in G_k} \bigpar{y_{j,t-1} w_{ij} (d_{ij} + d_0)^{-\hat\kappa_t^{(k)}}}
$$ {#eq-meanmod2}

where $\hat\cdot$ denotes the MLE estimates from the global model, with gradients updated to reflect $\hat p_i^{(k)}$ (@eq-newgrad - @eq-gradphi). Letting $y_{i,t}^* = \log\bigpar{\frac{y_{i,t}}{1 - y_{i,t}}}$ and $\mu_{i,t}^* = \psi(\mu_{i,t}^{(k)}\phi_t)-\psi((1-\mu_{i,t}^{(k)})\phi_t)$, we have for the non-zero part of $\mathbf{y}_t$ that

$$
\frac{\partial Q}{\partial \mu_{i,t}^{(k)}} \times \frac{\partial \mu_{i,t}^{(k)}}{\partial\eta_{i,t}} = \nsum \sum_{k=1}^K \hat p_i^{(k)} \cdot \phi_t(y_{i,t}^* - \mu_{i,t}^*) \cdot \mu_{i,t}^{(k)}(1 - \mu_{i,t}^{(k)})
$$ {#eq-newgrad}

Denoting the summand as $\text{grad}_{i,t}^{(k)}$, we can then write the updated gradients as

$$
\begin{split}
\frac{\partial Q}{\partial\beta} &= \nsum \sum_{s=1}^S\text{grad}_{i,t}^{(k)} \\
\frac{\partial Q}{\partial\delta} &= \nsum \sum_{s=1}^S\text{grad}_{i,t}^{(k)}\times y_{i,t-1}(1 - y_{i,t-1}) \\
\frac{\partial Q}{\partial\gamma} &= \nsum \sum_{s=1}^S\text{grad}_{i,t}^{(k)} \times \sum_{j \in G_s}\bigpar{y_{j,t-1}w_{ij} (d_{ij} + d_0)^{-\kappa}} \\
\frac{\partial Q}{\partial\kappa} &= \nsum \sum_{s=1}^S\text{grad}_{i,t}^{(k)} \times -\gamma \sum_{j \in G_s}\bigpar{y_{j,t-1}w_{ij} (d_{ij} + d_0)^{-\kappa}\log(d_{ij} + d_0)}
\end{split}
$$ {#eq-newgrads}

and we can directly derive the new gradient for $\phi_t$ as

$$
\frac{\partial Q}{\partial \phi_t} = \nsum \sum_{k = 1}^K \hat p_i^{(k)} \bigbrak{\psi(\phi_t) - \mu_{i,t}^{(k)} \psi(\mu_{i,t}^{(k)} \phi_t) - (1 - \mu_{i,t}^{(k)}) \psi(\phi_t(1 - \mu_{i,t}^{(k)})) + \mu_{i,t}^{(k)} \log y_{i,t} + \\ (1 - \mu_{i,t}^{(k)}) \log (1 - y_{i,t})}
$$ {#eq-gradphi}

Initial estimates for $\boldsymbol\theta$ will be the estimated MLEs from the forward model. \newpage

# References

::: {#refs}
:::